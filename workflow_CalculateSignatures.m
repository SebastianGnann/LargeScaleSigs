%% workflow_CalculateSignatures
% 
%   This script shows how to process the CAMELS struct files created with
%   saveCAMELSdata.m; specifically, it shows how to:
%   - load the struct files 
%   - use the time series to calculate some metrics (using the TOSSH toolbox). 
%
%   Note that this script requires sufficient RAM.
%
%   Copyright (C) 2021
%   This software is distributed under the GNU Public License Version 3.
%   See <https://www.gnu.org/licenses/gpl-3.0.en.html> for details.

%% load useful packages 

if (exist('BrewerMap') == 7)
    addpath(genpath('BrewerMap'));
else
    error('BrewerMap toolbox needed. Can be downloaded from https://github.com/DrosteEffect/BrewerMap and should be in a folder named BrewerMap in the same directory.')
end

if (exist('TOSSH') == 7)
    addpath(genpath('TOSSH'));
else
    error('TOSSH toolbox needed. Can be downloaded from https://github.com/TOSSHtoolbox and should be in a folder named TOSSH in the same directory.')
end

%% add paths

% working directory (important so that functions herein are called)
mydir = 'Signatures_large_scales';
addpath(genpath(mydir));

% figure path
fig_path = 'Signatures_large_scales/Figures/';
results_path = 'Signatures_large_scales/Results/';

%% load catchment data

CAMELS_US_data = load('CAMELS_Matlab/Data/CAMELS_US_data.mat');
CAMELS_GB_data = load('CAMELS_Matlab/Data/CAMELS_GB_data.mat');
% CAMELS_CL_data = load('CAMELS_Matlab/Data/CAMELS_CL_data.mat');
CAMELS_BR_data = load('CAMELS_Matlab/Data/CAMELS_BR_data.mat');
CAMELS_AUS_data = load('CAMELS_Matlab/Data/CAMELS_AUS_data.mat');

%% Calculate signatures using TOSSH
% To use TOSSH calculation functions, we need to create cell arrays
% containing the time series. We use cell arrays since some time series
% might have different lengths. While the length of each row in the cell
% array can vary, the cell arrays containing the t, Q, P, and PET data need
% to have exactly the same dimensions. 

% We first create cell arrays for all datasets we want to use. We only load
% data from a certain time period for better comparability and calculate
% the completeness in this time period to remove catchments with missing
% data.
[t_mat_US, Q_mat_US, P_mat_US, PET_mat_US, flow_perc_complete_US] = ...
    createCellCAMELS(CAMELS_US_data);
[t_mat_GB, Q_mat_GB, P_mat_GB, PET_mat_GB, flow_perc_complete_GB] = ...
    createCellCAMELS(CAMELS_GB_data);
[t_mat_AUS, Q_mat_AUS, P_mat_AUS, PET_mat_AUS, flow_perc_complete_AUS] = ...
    createCellCAMELS(CAMELS_AUS_data);
[t_mat_BR, Q_mat_BR, P_mat_BR, PET_mat_BR, flow_perc_complete_BR] = ...
    createCellCAMELS(CAMELS_BR_data);

% We then combine them into one large cell array.
t_mat = [t_mat_US; t_mat_GB; t_mat_AUS; t_mat_BR];
Q_mat = [Q_mat_US; Q_mat_GB; Q_mat_AUS; Q_mat_BR];
P_mat = [P_mat_US; P_mat_GB; P_mat_AUS; P_mat_BR];
PET_mat = [PET_mat_US; PET_mat_GB; PET_mat_AUS; PET_mat_BR];
% We also combine some attributes.
aridity = [CAMELS_US_data.aridity; CAMELS_GB_data.aridity; 
    CAMELS_AUS_data.aridity; CAMELS_BR_data.aridity];
frac_snow = [CAMELS_US_data.frac_snow; CAMELS_GB_data.frac_snow; 
    CAMELS_AUS_data.frac_snow; CAMELS_BR_data.frac_snow];
p_seasonality = [CAMELS_US_data.p_seasonality; CAMELS_GB_data.p_seasonality; 
    CAMELS_AUS_data.p_seasonality; CAMELS_BR_data.p_seasonality];
p_mean = [CAMELS_US_data.p_mean; CAMELS_GB_data.p_mean; 
    CAMELS_AUS_data.p_mean; CAMELS_BR_data.p_mean];
high_prec_freq = [CAMELS_US_data.high_prec_freq; CAMELS_GB_data.high_prec_freq; 
    CAMELS_AUS_data.high_prec_freq; CAMELS_BR_data.high_prec_freq];
pet_mean = [CAMELS_US_data.pet_mean; CAMELS_GB_data.pet_mean; 
    CAMELS_AUS_data.pet_mean; CAMELS_BR_data.pet_mean];
clay_frac = [CAMELS_US_data.clay_frac; CAMELS_GB_data.clay_perc; 
    CAMELS_AUS_data.claya; CAMELS_BR_data.clay_perc];
gauge_lat = [CAMELS_US_data.gauge_lat; CAMELS_GB_data.gauge_lat; 
    CAMELS_AUS_data.lat_outlet; CAMELS_BR_data.gauge_lat];
gauge_lon = [CAMELS_US_data.gauge_lon; CAMELS_GB_data.gauge_lon; 
    CAMELS_AUS_data.long_outlet; CAMELS_BR_data.gauge_lon];

% We remove catchments with incomplete records and human impacts. This is
% decided rather subjectively based on the available attributes. The main
% aim here is to remove catchments with *heavy* impacts.
% CAMELS US: contains only "near-natural" catchments
rmv_US = false(length(t_mat_US),1);
rmv_US(flow_perc_complete_US<99) = true;
% CAMELS GB: use benchmark catchments
rmv_GB = false(length(t_mat_GB),1);
rmv_GB(flow_perc_complete_GB<99) = true;
rmv_GB(~CAMELS_GB_data.isBenchmark) = true;
% CAMELS AUS: remove catchments with river disturbance index > 0.1
rmv_AUS = false(length(t_mat_AUS),1);
rmv_AUS(flow_perc_complete_AUS<99) = true;
rmv_AUS(CAMELS_AUS_data.river_di>0.1) = true;
% CAMELS BR: remove catchments with normalised consumptive use > 1% and
% catchments with regulation degree > 5%
rmv_BR = false(length(t_mat_BR),1);
rmv_BR(flow_perc_complete_BR<99) = true;
rmv_BR(CAMELS_BR_data.consumptive_use_perc>1) = true;
rmv_BR(CAMELS_BR_data.regulation_degree>5) = true;
% combine vectors
rmv = [rmv_US; rmv_GB; rmv_AUS; rmv_BR];

t_mat(rmv) = [];
Q_mat(rmv) = [];
P_mat(rmv) = [];
PET_mat(rmv) = [];
aridity(rmv) = [];
frac_snow(rmv) = [];
p_seasonality(rmv) = [];
p_mean(rmv) = [];
high_prec_freq(rmv) = [];
pet_mean(rmv) = [];
clay_frac(rmv) = [];
gauge_lat(rmv) = [];
gauge_lon(rmv) = [];

% We can now use the calculation functions to calculate various signatures.
% McMillan groundwater set - note that this may take a few minutes
CAMELS_signatures_Groundwater = ...
    calc_McMillan_Groundwater(Q_mat, t_mat, P_mat, PET_mat);
% McMillan overland flow set - note that this may take a few minutes
CAMELS_signatures_OverlandFlow = ...
    calc_McMillan_OverlandFlow(Q_mat, t_mat, P_mat, PET_mat);

% We can save the results as mat files which can be easily loaded. 
save(strcat(results_path,'CAMELS_signatures_Groundwater.mat'),...
    '-struct','CAMELS_signatures_Groundwater')
save(strcat(results_path,'CAMELS_signatures_OverlandFlow.mat'),...
    '-struct','CAMELS_signatures_OverlandFlow')

% Alternatively, we can save the results as txt file.
% writetable(struct2table(CAMELS_US_signatures_Groundwater),...
%     strcat(results_path,'CAMELS_US_signatures_Groundwater.txt'))
% writetable(struct2table(CAMELS_US_signatures_Groundwater),...
%     strcat(results_path,'CAMELS_US_signatures_OverlandFlow.txt'))

%% recession analysis using individual recessions
%{
RecessionParameters = NaN(size(Q_mat,1),2);
RecessionParameters_error_str = strings(size(Q_mat,1),1);

% loop over all catchments
for i = 1:size(Q_mat,1)

        if mod(i,100) == 0 % check progress
        fprintf('%.0f/%.0f\n',i,size(Q_mat,1))
        end
        
    [para_mat, recession_month,~,RecessionParameters_error_str(i)] = ...
        sig_RecessionAnalysis(Q_mat{i},t_mat{i},'plot_results',false);
    [~, ind] = min(abs(para_mat(:,2) - median(para_mat(:,2)))); % find recession according to median exponent
    RecessionParameters(i,1) = para_mat(ind,1);
    RecessionParameters(i,2) = para_mat(ind,2);
    
end
%}

% plotMapUS(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
%     RecessionParameters(:,2),...
%     'attribute_name','\beta_m [-]',...
%     'ID',CAMELS_US_data.gauge_id,...
%     'colour_scheme','Spectral','flip_colour_scheme',false,...
%     'c_limits',[0 4],'c_log_scale',false,...
%     'figure_name','Recessions','save_figure',false,'figure_path',fig_path)

%% load results
CAMELS_signatures_Groundwater = ...
    load(strcat(results_path,'CAMELS_signatures_Groundwater.mat'));
CAMELS_signatures_OverlandFlow = ...
    load(strcat(results_path,'CAMELS_signatures_OverlandFlow.mat'));

%% correlation matrix groundwater
Groundwater_matrix = [...
    CAMELS_signatures_Groundwater.BFI,...
    CAMELS_signatures_Groundwater.AverageStorage,...
    CAMELS_signatures_Groundwater.VariabilityIndex,...
    CAMELS_signatures_Groundwater.StorageFraction(:,1),...
    CAMELS_signatures_Groundwater.EventRR,...
    CAMELS_signatures_Groundwater.TotalRR,...
    CAMELS_signatures_Groundwater.EventRR_TotalRR_ratio,...
    CAMELS_signatures_Groundwater.RR_Seasonality,...
    CAMELS_signatures_Groundwater.BaseflowRecessionK,...
    CAMELS_signatures_Groundwater.Spearmans_rho,...
    CAMELS_signatures_Groundwater.MRC_num_segments,...
    CAMELS_signatures_Groundwater.RecessionParameters(:,1),...
    CAMELS_signatures_Groundwater.RecessionParameters(:,2),...
    CAMELS_signatures_Groundwater.Recession_a_Seasonality,...
    ];
%     RecessionParameters(:,1),...
%     RecessionParameters(:,2),...

signature_names_Groundwater = {...
    'BFI',...
    'Storage',...
    'Var. index',...
    'Storage frac.',...
    'EventRR',...
    'TotalRR',...
    'EventRR/TotalRR',...
    'RR seasonality',...
    'Recession K',...
    'Spearmans rho',...
    'MRC # segments',...
    'Rec. a',...
    'Rec. b',...
    'Rec. seasonality',...
    };

rho_Groundwater = corr(Groundwater_matrix,'rows','complete','type','Spearman');
figure('pos',[100 100 500 420]);
imagesc(rho_Groundwater); %axis equal
set(gca, 'XTick', 1:length(rho_Groundwater)); % center x-axis ticks on bins
set(gca, 'YTick', 1:length(rho_Groundwater)); % center y-axis ticks on bins
set(gca, 'XTickLabel', signature_names_Groundwater); % set x-axis labels
xtickangle(45)
set(gca, 'YTickLabel', signature_names_Groundwater); % set y-axis labels
colormap('parula'); % set the colorscheme
colorbar; % enable colorbar
caxis([-1 1])

correlationMatrixCircles(rho_Groundwater,signature_names_Groundwater)

%% correlation matrix overland flow
OverlandFlow_matrix = [...
    CAMELS_signatures_OverlandFlow.IE_effect,...
    CAMELS_signatures_OverlandFlow.IE_thresh,...
    CAMELS_signatures_OverlandFlow.IE_thresh_signif,...
    CAMELS_signatures_OverlandFlow.min_Qf_perc,...
    CAMELS_signatures_OverlandFlow.SE_effect,...
    CAMELS_signatures_OverlandFlow.SE_slope,...
    CAMELS_signatures_OverlandFlow.SE_thresh,...
    CAMELS_signatures_OverlandFlow.SE_thresh_signif,...
    CAMELS_signatures_OverlandFlow.Storage_thresh,...
    CAMELS_signatures_OverlandFlow.Storage_thresh_signif,...
    ];

signature_names_OverlandFlow = {...
    'IE effect',...
    'IE thresh',...
    'IE signif',...
    'min Qf perc',...
    'SE effect',...
    'SE slope',...
    'SE thresh',...
    'SE signif',...
    'Storage thresh',...
    'Storage signif',...
    };

rho_OverlandFlow = corr(OverlandFlow_matrix,'rows','complete','type','Spearman');
figure('pos',[100 100 500 420]);
imagesc(rho_OverlandFlow); %axis equal
set(gca, 'XTick', 1:length(rho_OverlandFlow)); % center x-axis ticks on bins
set(gca, 'YTick', 1:length(rho_OverlandFlow)); % center y-axis ticks on bins
set(gca, 'XTickLabel', signature_names_OverlandFlow); % set x-axis labels
xtickangle(45)
set(gca, 'YTickLabel', signature_names_OverlandFlow); % set y-axis labels
colormap('parula'); % set the colorscheme
colorbar; % enable colorbar
caxis([-1 1])

correlationMatrixCircles(rho_OverlandFlow,signature_names_OverlandFlow)

%% show distributions of signature with quartiles
% violin plot?
% todo: add to path

figure()
for i = 1:14
    subplot(4,4,i)
    tmp = Groundwater_matrix(:,i);
    I = calcMoransI(gauge_lat,gauge_lon,tmp);
    %     [f,xi] = ksdensity(tmp);
    quant = quantile(tmp, [.01 .25 .75 .99]);
    %     plot(f,xi); hold on
    histogram(tmp)
    title(round(I,2))
    %     ylim([(min(tmp)) (max(tmp))])
    % plot([0 0 0],quant,'x')
%     set(gca,'XTickLabel',[]);
    %     try
    %         yticks([(min(tmp)) round(quant,2) (max(tmp))])
    %     catch
    %     end
    %     ylabel(signature_names_Groundwater{i})
    xlim([quant(1) quant(4)])
    xlabel(signature_names_Groundwater{i})
end

% figure
% vs2 = boxplot(OverlandFlow_matrix, signature_names_OverlandFlow);


figure()
for i = 1:10
    subplot(3,4,i)
    tmp = OverlandFlow_matrix(:,i);
    I = calcMoransI(gauge_lat,gauge_lon,tmp);
    quant = quantile(tmp, [.01 .25 .75 .99]);
    histogram(tmp)
    title(round(I,2))
    xlim([quant(1) quant(4)])
    xlabel(signature_names_OverlandFlow{i})
end

%% signature variations with climate and key landscape attributes

figure()
for i = 1:14
    subplot(4,4,i)
    tmp = Groundwater_matrix(:,i);
    I = calcMoransI(gauge_lat,gauge_lon,tmp);
    quant = quantile(tmp, [.01 .25 .75 .99]);
    scatter(aridity,tmp,15,frac_snow,'filled')
    title(round(I,2))
%     xlim([quant(1) quant(4)])
    ylabel(signature_names_Groundwater{i})
%     set()
end

figure()
for i = 1:10
    subplot(3,4,i)
    tmp = OverlandFlow_matrix(:,i);
    I = calcMoransI(gauge_lat,gauge_lon,tmp);
    quant = quantile(tmp, [.01 .25 .75 .99]);
    scatter(aridity,tmp,15,frac_snow,'filled')
    title(round(I,2))
%     xlim([quant(1) quant(4)])
    ylabel(signature_names_OverlandFlow{i})
%     set()
end

%% plot results
%{
% We can plot and save maps of some attribute using the plotMap functions.

% Groundwater set
plotMapUS(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
    CAMELS_US_signatures_Groundwater.AverageStorage,...
    'attribute_name','Av. storage [mm]',...
    'ID',CAMELS_US_data.gauge_id,...
    'colour_scheme','Spectral','flip_colour_scheme',false,...
    'c_limits',[0 500],'c_log_scale',false,...
    'figure_name','AverageStorage','save_figure',false,'figure_path',fig_path)

plotMapUS(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
    1./CAMELS_US_signatures_Groundwater.BaseflowRecessionK,...
    'attribute_name','Rec. K [days]',...
    'ID',CAMELS_US_data.gauge_id,...
    'colour_scheme','Spectral','flip_colour_scheme',false,...
    'c_limits',[0 30],'c_log_scale',false,...
    'figure_name','RecessionK','save_figure',false,'figure_path',fig_path)

plotMapUS(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
    CAMELS_US_signatures_Groundwater.BFI,...
    'attribute_name','BFI [-]',...
    'ID',CAMELS_US_data.gauge_id,...
    'colour_scheme','Spectral','flip_colour_scheme',false,...
    'c_limits',[0 1],'c_log_scale',false,...
    'figure_name','BFI','save_figure',false,'figure_path',fig_path)

plotMapUS(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
    CAMELS_US_signatures_Groundwater.EventRR,...
    'attribute_name','Event RR [mm]',...
    'ID',CAMELS_US_data.gauge_id,...
    'colour_scheme','Spectral','flip_colour_scheme',false,...
    'c_limits',[0 1],'c_log_scale',false,...
    'figure_name','EventRR','save_figure',false,'figure_path',fig_path)

plotMapUS(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
    CAMELS_US_signatures_Groundwater.EventRR_TotalRR_ratio,...
    'attribute_name','RR ratio [-]',...
    'ID',CAMELS_US_data.gauge_id,...
    'colour_scheme','Spectral','flip_colour_scheme',false,...
    'c_limits',[0 1],'c_log_scale',false,...
    'figure_name','EventRR_TotalRR_ratio','save_figure',false,'figure_path',fig_path)

plotMapUS(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
    CAMELS_US_signatures_Groundwater.MRC_num_segments,...
    'attribute_name','MRC segments [mm]',...
    'ID',CAMELS_US_data.gauge_id,...
    'colour_scheme','Spectral','flip_colour_scheme',false,...
    'c_limits',[1 3],'c_log_scale',false,...
    'figure_name','MRC_num_segments','save_figure',false,'figure_path',fig_path)

plotMapUS(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
    CAMELS_US_signatures_Groundwater.Recession_a_Seasonality,...
    'attribute_name','a season. [mm]',...
    'ID',CAMELS_US_data.gauge_id,...
    'colour_scheme','Spectral','flip_colour_scheme',false,...
    'c_limits',[0 4],'c_log_scale',false,...
    'figure_name','Recession_a_Seasonality','save_figure',false,'figure_path',fig_path)

plotMapUS(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
    CAMELS_US_signatures_Groundwater.RecessionParameters(:,2),...
    'attribute_name','Rec. b [mm]',...
    'ID',CAMELS_US_data.gauge_id,...
    'colour_scheme','Spectral','flip_colour_scheme',false,...
    'c_limits',[0.5 2],'c_log_scale',false,...
    'figure_name','RecessionParameters_b','save_figure',false,'figure_path',fig_path)

plotMapUS(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
    CAMELS_US_signatures_Groundwater.RR_Seasonality,...
    'attribute_name','RR season. [mm]',...
    'ID',CAMELS_US_data.gauge_id,...
    'colour_scheme','Spectral','flip_colour_scheme',false,...
    'c_limits',[0 2],'c_log_scale',false,...
    'figure_name','RR_Seasonality','save_figure',false,'figure_path',fig_path)

plotMapUS(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
    CAMELS_US_signatures_Groundwater.Spearmans_rho,...
    'attribute_name','\rho [-]',...
    'ID',CAMELS_US_data.gauge_id,...
    'colour_scheme','Spectral','flip_colour_scheme',false,...
    'c_limits',[-1 -.8],'c_log_scale',false,...
    'figure_name','Spearmans_rho','save_figure',false,'figure_path',fig_path)

plotMapUS(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
    CAMELS_US_signatures_Groundwater.StorageFraction(:,1),...
    'attribute_name','Storage frac. [-]',...
    'ID',CAMELS_US_data.gauge_id,...
    'colour_scheme','Spectral','flip_colour_scheme',false,...
    'c_limits',[0 1],'c_log_scale',false,...
    'figure_name','StorageFraction','save_figure',false,'figure_path',fig_path)

plotMapUS(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
    CAMELS_US_signatures_Groundwater.TotalRR,...
    'attribute_name','RR [-]',...
    'ID',CAMELS_US_data.gauge_id,...
    'colour_scheme','Spectral','flip_colour_scheme',false,...
    'c_limits',[0 1],'c_log_scale',false,...
    'figure_name','TotalRR','save_figure',false,'figure_path',fig_path)

plotMapUS(CAMELS_US_data.gauge_lat,CAMELS_US_data.gauge_lon,...
    CAMELS_US_signatures_Groundwater.VariabilityIndex,...
    'attribute_name','Var. Index [-]',...
    'ID',CAMELS_US_data.gauge_id,...
    'colour_scheme','Spectral','flip_colour_scheme',false,...
    'c_limits',[0 1],'c_log_scale',false,...
    'figure_name','VariabilityIndex','save_figure',false,'figure_path',fig_path)
%}

